- name: copy files to server
  copy:
    src: '{{ role_path }}/files/{{ item }}'
    dest: ~/temp/
    remote_src: false
  become: yes
  become_user: root
  with_items: '{{ K8s.DASHBOARD_MANIFESTS }}'

- name: start dashboard
  shell: kubectl create -f ~/temp/{{ item }}
  with_items: '{{ K8s.DASHBOARD_MANIFESTS }}'
  become: yes
  become_user: root

- name: cleanup master
  file:
    path: ~/temp
    state: absent
  become: yes
  become_user: root

- name: stop previous kubeproxy
  shell: kill -9 $(ps aux | grep "kubectl proxy" | awk '{ print $2 }')
  become: yes
  become_user: root
  register: kubeproxy
  failed_when: kubeproxy.rc in []

- name: start kubeproxy
  shell: (nohup kubectl proxy --address {{ K8s.MASTER.IP }} --port={{ K8s.DASHBOARD.PORT }} --accept-hosts='^*$' 1>/dev/null 2>&1) &
  become: yes
  become_user: root

- name: check if all pods in kube-system started
  shell: kubectl get pods -n kube-system | grep -i "Running" | wc -l
  register: REGISTER_WATCH_RESULT
  until: REGISTER_WATCH_RESULT.stdout == "11"
  retries: 6
  delay: 10
  become: yes
  become_user: root

- name: if successful show running pods
  shell: kubectl get pods -n kube-system
  register: REGISTER_WATCH_RESULT
  become: yes
  become_user: root

- name: show
  debug:
    var: REGISTER_WATCH_RESULT.stdout_lines
    verbosity: 0
